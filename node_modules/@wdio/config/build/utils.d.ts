/// <reference types="webdriver" />
import type { ConfigOptions, DefaultOptions } from './types';
declare const REGION_MAPPING: {
    us: string;
    eu: string;
    'eu-central-1': string;
    'us-east-1': string;
};
export declare const validObjectOrArray: (object: any) => object is object | any[];
export declare function getSauceEndpoint(region: keyof typeof REGION_MAPPING, isRDC?: boolean): string;
export declare function removeLineNumbers(filePath: string): string;
export declare function isCucumberFeatureWithLineNumber(spec: string | string[]): boolean;
export declare function isCloudCapability(conf: {
    capabilities?: WebDriver.DesiredCapabilities;
} | WebDriver.DesiredCapabilities): boolean;
export declare function detectBackend(options?: ConfigOptions, isRDC?: boolean): {
    hostname: string | undefined;
    port: number | undefined;
    protocol: string | undefined;
    path: string | undefined;
};
export declare function validateConfig<T>(defaults: DefaultOptions<T>, options: T, keysToKeep?: (keyof T)[]): T;
export {};
//# sourceMappingURL=utils.d.ts.map